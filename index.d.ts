/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export type JSConfig = Config
export class Config {
  constructor()
  /** Configures whether the WebAssembly threads proposal will be enabled for compilation. */
  wasmThreads(enable: boolean): void
  /** Whether or not to enable support for asynchronous functions in Wasmtime. */
  asyncSupport(enable: boolean): void
  /**
   * Configures whether the WebAssembly Relaxed SIMD proposal will be enabled for compilation.
   * This is false by default.
   */
  wasmRelaxedSimd(enable: boolean): void
}
export type JSEngine = Engine
export class Engine {
  constructor(config: Config)
  static default(): JsEngine
}
export type JSModule = Module
export class Module {
  static fromFile(jsEngine: Engine, path: string): JsModule
}
export type JSStore = Store
export class Store {
  constructor(engine: Engine)
}
export type JSLinker = Linker
export class Linker {
  constructor(engine: Engine)
}
export class WasmFunctionTy { }
export class WasmFunction {
  ty(store: Store): WasmFunctionTy
  call(store: Store, args: unknown[]): number
}
export type JSInstance = Instance
export class Instance {
  constructor(store: Store, module: Module)
  getFunc(store: Store, fnName: string): WasmFunction | null
}
